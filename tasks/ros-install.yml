---
# ROS install task

- name: Handles correct ROS distribution according to the Ubuntu version.
  include_vars: "{{ ansible_distribution_release }}.yml"

- name: Setup ROS keys
  apt_key:
    keyserver: "{{ ros_keyserver }}"
    id: "{{ ros_key_id }}"

- name: Setup sources.list
  apt_repository:
    repo: deb {{ ros_repository_url }} {{ ansible_distribution_release }} main
    state: present
    filename: ros-latest

- name: Install ROS
  apt:
    name: "{{ packages }}"
    update_cache: yes
  vars:
    packages: "{{ 'ros-' + ros_distribution + '-' + ros_configuration }}"

- name: Install python-rosdep 
  apt:
    name: "python{{ python_version_suffix }}-rosdep"
    update_cache: yes

- name: Initialize rosdep
  command: rosdep init
  args:
    creates: /etc/ros/rosdep/sources.list.d/20-default.list

- name: Update rosdep
  command: rosdep update
  args:
    creates: /home/{{ ros_user.name }}/.ros/rosdep/sources.cache
  become: yes
  become_user: "{{ ros_user.name }}"

- name: Update .bashrc with /opt/ros/<ros_distribution>/setup.bash
  lineinfile:
    path: /home/{{ ros_user.name }}/.bashrc
    line: source /opt/ros/{{ ros_distribution }}/setup.bash

- name: Install dependencies for building packages
  apt:
    name: "{{ packages }}"
  vars:
    packages:
    - "python{{ python_version_suffix }}-rosinstall"
    - "python{{ python_version_suffix }}-rosinstall-generator"
    - "python{{ python_version_suffix }}-wstool"
    - "build-essential"
    - "python{{ python_version_suffix }}-catkin-tools"
    - python3-colcon-common-extensions

- name: Install Python 3 PIP
  apt:
    name: python3-pip
  when: install_pip

- name: Install Colcon Bundle
  pip:
    name: "{{ packages }}"
    executable: pip3
    extra_args: -U
  vars:
    packages:
    - colcon-ros-bundle
  tags:
    - pip3
